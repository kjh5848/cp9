[tool.poetry]
name = "research-backend"
version = "0.1.0"
description = "Research Backend with Clean Architecture"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.25"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
celery = {extras = ["redis"], version = "^5.3.4"}
redis = "^5.0.1"
httpx = "^0.25.2"
python-dotenv = "^1.0.0"
python-multipart = "^0.0.6"
tenacity = "^8.2.3"
python-json-logger = "^2.0.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.12.1"
ruff = "^0.1.11"
mypy = "^1.8.0"
pre-commit = "^3.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []
fixable = ["ALL"]
unfixable = []

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["app/tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --cov=app --cov-report=term-missing --cov-report=html"
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as async"
]

[tool.poetry.scripts]
# Docker 기반 스크립트 (주요 사용)
setup = "scripts.docker_runner:setup"
dev = "scripts.docker_runner:dev"
stop = "scripts.docker_runner:stop"
test = "scripts.docker_runner:test"
lint = "scripts.docker_runner:lint"
format = "scripts.docker_runner:format"

# 로컬 개발 스크립트 (백업용)
setup-local = "scripts.runner:setup"
dev-local = "scripts.runner:dev"
stop-local = "scripts.runner:stop"
test-local = "scripts.runner:test"
lint-local = "scripts.runner:lint"
format-local = "scripts.runner:format"